@page "/ember"
@using Intalk_220117.Data
@inject ApplicationDbService dbService

<h3>Alkatrészek kezelése</h3>

<h5>Meglévő emberz kiválasztása:</h5>
<div style="display: flex; justify-content: space-between">
    <select class="form-control selectpicker" style="max-width:300px; display:inline" @onchange=@SelectedEmberChanged>
        <option value="base">-Új ember hozzáadása-</option>
        @foreach (var ember in activeEmberek)
        {
            <option value="@ember.Id">@ember.Nev</option>
        }
    </select>
    @if (!hozzaadas)
    {
        <button class="btn btn-danger" type="submit" @onclick="Delete">Törlés</button>
    }
</div>

<EditForm Model="@emberModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="HandleInValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <div>
            <label for="nev" style="font-weight:bold">Név:</label>
            <input class="form-control" style="text-align:center" type="text" name="nev" value="@emberModel.Nev" @onchange="(x=> SetName(x.Value.ToString()))" />
        </div>
        <div>
            <label for="szuletes" style="font-weight:bold">Születési dátum</label>
            <input class="form-control" style="text-align:center" type="text" name="szuletes" value="@emberModel.SzuletesiDatum.ToString("yyyy.MM.dd")" @onchange="(x=> SetDatum(x.Value.ToString()))" />
        </div>
        <div>
            <label for="nem" style="font-weight:bold">Nem:</label>
            <InputSelect @bind-Value="emberModel.Nem" class="form-control">
                <option value="Férfi">Férfi</option>
                <option value="Nő">Nő</option>
            </InputSelect>
        </div>
    </div>
    @if (hozzaadas)
    {
        <button class="btn btn-primary" style="display:block; width:100%; padding: 10px; margin-top:10px" type="submit">Hozzáadás</button>
    }
    else
    {
        <button class="btn btn-primary" style="display:block; width:100%; padding: 10px; margin-top:10px" type="submit">Módosítás</button>
    }
</EditForm>
@if (message != null)
{
    string additionalClass = "danger";
    if (message.Type == MessageType.Siker)
    {
        additionalClass = "success";
    }
    <div class="alert alert-@additionalClass d-flex justify-content-between">
        @message.Text
        <button class="btn btn-outline-info" type="submit" @onclick="@(()=>message = null)">X</button>
    </div>
}

@code {
    Ember emberModel;
    List<Ember> activeEmberek;
    bool hozzaadas = true;
    UserMessage message;

    protected override void OnInitialized()
    {
        emberModel = new Ember();
        emberModel.Nem = "Férfi";
        activeEmberek = dbService.GetAllEmber();
    }

    private void SetName(string nev)
    {
        message = null;
        emberModel.Nev = nev;
    }
    private void SetDatum(string datum)
    {
        message = null;
        DateTime _datum = new DateTime();
        if (DateTime.TryParse(datum, out _datum))
        {
            emberModel.SzuletesiDatum = _datum;
        }
        else
        {
            message = new UserMessage("Nem megfelelő a születési dátum formátuma! Elvárt: xxxx.yy.zz pl.: 1992.05.16",MessageType.Hiba);
        }
    }

    private void SelectedEmberChanged(ChangeEventArgs e)
    {
        message = null;
        if (e.Value.ToString() != "base")
        {
            emberModel = activeEmberek.FirstOrDefault(x => x.Id.ToString() == e.Value.ToString());
            hozzaadas = false;
        }
        else
        {
            emberModel = new Ember();
            hozzaadas = true;
        }
    }

    public void Delete()
    {
        string name = emberModel.Nev;
        if (dbService.DeleteEmber(emberModel.Id))
        {
            message = new UserMessage(name + " sikeresen törölve az adatbázisból!", MessageType.Siker);
            emberModel = new Ember();
        }
        else
        {
            message = new UserMessage(name + " nem törölhető, mert hozzá van adva kapcsolathoz!", MessageType.Hiba);
        }
        activeEmberek = dbService.GetAllEmber();
    }

    public void HandleValidSubmit()
    {
        dbService.AddOrUpdateEmber(emberModel);
        if (hozzaadas)
        {
            message = new UserMessage(emberModel.Nev + " sikeresen hozzáadva az adatbázishoz!", MessageType.Siker);
            emberModel = new Ember();
        }
        else
        {
            message = new UserMessage(emberModel.Nev + " sikeresen módosítva az adatbázisban!", MessageType.Siker);
        }
        activeEmberek = dbService.GetAllEmber();
    }

    public void HandleInValidSubmit()
    {
        message = null;
    }
}
